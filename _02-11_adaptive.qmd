## Adaptive (#sec-adaptive)

{{< include _02-11_adaptive_text.qmd >}}

```{r}
#| label: setup-adaptive
#| include: false

domains <- c("Adaptive Functioning")

pheno <- "adaptive"
```

```{r}
#| label: export-adaptive
#| include: false
#| eval: true
# Load necessary libraries
library(readr)
library(dplyr)
library(magrittr)

# Read the CSV file into a data frame
adaptive <- read_csv("neurobehav.csv")

# Filter the data frame to keep only rows where 'domain' equals 'domains'
adaptive <- adaptive |> filter(domain == domains)

# Further filter the data frame to remove rows with NA in 'z_mean_domain'
adaptive <- adaptive |> filter(!is.na(z_mean_domain))

# Select specific columns from the data frame
adaptive <- adaptive |> dplyr::select(
  test, scale, score, z, percentile, range, test_name,
  domain, subdomain, narrow, pass, verbal, timed, description, result,
  z_mean_domain, z_sd_domain, z_mean_subdomain,
  z_sd_subdomain, z_mean_narrow, z_sd_narrow
)
readr::write_csv(adaptive, paste0(pheno, ".csv"), na = "", col_names = TRUE, append = FALSE)
```

```{r}
#| label: data-adaptive
#| include: false
#| eval: true

# Load the bwu library
library(bwu)

pheno <- "adaptive"

# Read the data using the read_data function from the bwu library
# The phenotype is specified by the 'pheno' variable
data <- bwu::read_data(pheno = pheno)

# Define the scales of interest
scales <- c(
  "General Adaptive Composite (GAC)",
  "Conceptual",
  "Communication",
  "Functional Pre-Academics",
  "Self-Direction",
  "Adaptive Skills Index",
  "Leisure",
  "Social Index",
  "Social",
  "Adaptive",
  "Practical",
  "Community Use",
  "School Living",
  "Home Living",
  "Health and Safety",
  "Self-Care",
  "Motor",
  "General Adaptive Composite",
  "Conceptual Skills Index",
  "Functional Academics",
  "Practical Skills Index",
  "Work"
)

data_adaptive <- vroom::vroom("adaptive.csv", delim = ",")
```

```{r}
#| label: text-adaptive
#| cache: true
#| include: false
bwu::cat_neuropsych_results(data = data_adaptive, file = "_02-11_adaptive_text.qmd")
```

```{r}
#| label: qtbl-adaptive
#| dev: tikz
#| fig-process: pdf2png
#| include: false
#| eval: true

# Set the default engine for tikz to "xetex"
options(tikzDefaltEngine = "xetex")

# Define the source note
fn_scaled_score <- gt::md("Scaled Score: Mean = 10 [50th‰], SD ± 3 [16th‰, 84th‰]")
fn_standard_score <- gt::md("Index Score: Mean = 100 [50th‰], SD ± 15 [16th‰, 84th‰]")
source_note <- gt::md("_T_-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]")
# Define the groups for the table
grp_adaptive <- list(
  standard_score = c(
    "ABAS-3 Parent", "ABAS-3", "ABAS-3 Teacher"
  ),
  scaled_score = c(
    "ABAS-3 Parent", "ABAS-3", "ABAS-3 Teacher"
  )
)

# Define the table name, vertical padding, and multiline setting
pheno <- "adaptive"
table_name <- "table_adaptive"
vertical_padding <- 0
multiline <- TRUE

# Create the table using the tbl_gt function from the bwu library
bwu::tbl_gt(
  data = data_adaptive,
  pheno = pheno,
  table_name = table_name,
  fn_standard_score = fn_standard_score,
  fn_scaled_score = fn_scaled_score,
  grp_standard_score = grp_adaptive[["standard_score"]],
  grp_scaled_score = grp_adaptive[["scaled_score"]],
  dynamic_grp = grp_adaptive,
  vertical_padding = vertical_padding,
  multiline = multiline
)
```

```{r}
#| label: fig-adaptive
#| include: false
#| fig-cap: "Adaptive functioning is a broad term that refers to the collection of conceptual, social, and practical skills that enable individuals to function independently and meet the demands of everyday life. These skills include things like communication, self-care, home living, social skills, and community use."

data_adaptive <- data_adaptive |> 
  dplyr::group_by(domain, .add = TRUE) |> 
  dplyr::mutate(z_mean_domain = mean(z, na.rm = TRUE), 
                z_sd_domain = sd(z, na.rm = TRUE)) |> 
  dplyr::ungroup()

# Arguments
x <- data_adaptive$z_mean_narrow
y <- data_adaptive$narrow
colors <- NULL
return_plot <- TRUE
# return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_adaptive.svg"

# Define bounds for filtering
# lower_bound <- -3 # Example lower bound
# upper_bound <- 3 # Example upper bound

# Ensure no NA values are present in the plotting data
# data_adaptive <- data_adaptive |>
#   dplyr::filter(!is.na(x) & !is.na(y) & !is.infinite(x) & !is.infinite(y))

# Optionally, add a range filter if you know the expected range of your data
# data_adaptive <- data_adaptive |>
#   dplyr::filter(x > lower_bound & x < upper_bound)

bwu::dotplot(
  data = data_adaptive,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)
```

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Merriweather", size: 0.7em)
  set text(..font)
  pad(top: 0.5em)[]
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [Table],
          ),
        figure([#image(file_fig)],
          caption: figure.caption(position: bottom, [
            Adaptive functioning is a broad term that refers to the collection of conceptual, social, and practical skills that enable individuals to function independently and meet the demands of everyday life. These skills include things like communication, self-care, home living, social skills, and community use.
            ]),
          placement: none,
          kind: "image",
          supplement: [Figure],
          gap: 0.5em,
          ),
        )
    }
```
```{=typst}
#let title = "Adaptive Functioning"
#let file_qtbl = "table_adaptive.png"
#let file_fig = "fig_adaptive.svg"
#domain(
  title: [#title Scores],
  file_qtbl,
  file_fig
)
```
