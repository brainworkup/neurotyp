## Motor {#sec-motor}

{{< include _02-07_motor_text.qmd >}}

```{r}
#| label: setup-motor
#| include: false
# domain
domains <- c("Motor")
# phenotype
pheno <- "motor"
```

```{r}
#| label: export-motor
#| include: false
motor <- readr::read_csv("neurocog.csv") |>
  dplyr::filter(domain == domains) |>
  dplyr::filter(!is.na(z_mean_domain)) |>
  dplyr::select(
    test, scale, score, z, percentile, range, test_name, domain, subdomain, narrow,
    pass, verbal, timed, description, result, z_mean_domain, z_sd_domain,
    z_mean_subdomain,
    z_sd_subdomain, z_mean_narrow, z_sd_narrow, z_mean_pass, z_sd_pass,
    z_mean_verbal, z_sd_verbal, z_mean_timed, z_sd_timed
  )
readr::write_csv(motor, paste0(pheno, ".csv"))
```

```{r}
#| label: data-motor
#| include: false

data <- bwu::read_data(pheno = pheno)
scales <- c(
  "Dominant Hand Time",
  "Dominant Hand",
  "Dominant vs. Nondominant",
  "Fingertip Tapping Dominant Hand Repetitions",
  "Fingertip Tapping Dominant Hand Sequences",
  "Fingertip Tapping Dominant Hand",
  "Fingertip Tapping Nondominant Hand Repetitions",
  "Fingertip Tapping Nondominant Hand Sequences",
  "Fingertip Tapping Nondominant Hand",
  "Fingertip Tapping Repetitions",
  "Fingertip Tapping Sequences",
  "FT Dominant Hand vs. Nondominant Hand",
  "Imitating Hand Positions",
  "Imitating Hand Positions-Dominant",
  "Imitating Hand Positions-Nondominant",
  "Left-Hand Time",
  "Non-Dominant Hand Time",
  "Nondominant Hand",
  "Nondominant Hand Time",
  "Repetitions vs. Sequences",
  "Right-Hand Time",
  "Visuomotor Precision Errors",
  "Visuomotor Precision Pencil Lifts",
  "Visuomotor Precision Completion Time",
  "Visuomotor Precision"
)

data_motor <-
  bwu::filter_data(
    data,
    domain = domains,
    scale = scales
  )
```

```{r}
#| label: text-motor
#| cache: true
#| include: false

# export text
bwu::cat_neuropsych_results(data = data_motor, file = "_02-07_motor_text.qmd")
```

```{r}
#| label: qtbl-motor
#| dev: tikz
#| fig-process: pdf2png
#| include: false
options(tikzDefaultEngine = "xetex")

# footnotes
fn_scaled_score <- gt::md("Scaled Score: Mean = 10 [50th‰], SD ± 3 [16th‰, 84th‰]")
fn_standard_score <- gt::md("Index Score: Mean = 100 [50th‰], SD ± 15 [16th‰, 84th‰]")
fn_t_score <- gt::md("_T_-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]")
fn_z_score <- gt::md("_z_-Score: Mean = 0 [50th‰], SD ± 1 [16th‰, 84th‰]")

pheno <- "motor"
table_name <- "table_motor"

grp_motor <- list(
  t_score = c("Grooved Pegboard"),
  scaled_score = c("NEPSY-2")
)
vertical_padding <- 0
multiline <- TRUE

bwu::tbl_gt(
  data = data_motor,
  pheno = pheno,
  table_name = table_name,
  fn_scaled_score = fn_scaled_score,
  fn_t_score = fn_t_score,
  grp_scaled_score = grp_motor[["scaled_score"]],
  grp_t_score = grp_motor[["t_score"]],
  dynamic_grp = grp_motor,
  vertical_padding = vertical_padding,
  multiline = multiline
)
```

```{r}
#| label: fig-motor
#| include: false
#| eval: false
#| fig-cap: "Sensorimotor tasks refer to the capacity to control hand movements quickly, smoothly, and with adequate precision, which are required to engage in activities such as writing and drawing."

# args
x <- data_motor$z_mean_narrow
y <- data_motor$narrow
colors <- NULL
# return_plot <- TRUE
return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_motor.svg"

# Ensure no NA values are present in the plotting data
data_motor <- data_motor |>
  dplyr::filter(!is.na(x) & !is.na(y))


# Ensure no NA values are present in the plotting data
data_motor <- data_motor |>
  dplyr::filter(!is.na(x) & !is.na(y) & !is.infinite(x) & !is.infinite(y))

# Optionally, add a range filter if you know the expected range of your data
data_motor <- data_motor |>
  dplyr::filter(x > lower_bound & x < upper_bound) # Adjust lower_bound and upper_bound as necessary

# Plotting function call
bwu::dotplot(
  data = data_motor,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename,
  na.rm = TRUE
)


bwu::dotplot(
  data = data_motor,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename,
  na.rm = TRUE
)
```

```{=typst}
#let domain(title: none, file_qtbl) = {
  let font = (font: "Merriweather", size: 0.7em)
  set text(..font)
  pad(top: 0.5em)[]  
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [Table],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            Sensorimotor tasks refer to the capacity to control hand movements
            quickly, smoothly, and with adequate precision, which are required
            to engage in activities such as writing and drawing.
            ]),
          placement: none,
          kind: "image",
          supplement: [Figure],
          gap: 0.5em,
        ),
      )
  }
```
```{=typst}
#let title = "Motor"
#let file_qtbl = "table_motor.png"
// #let file_fig = "fig_motor.svg"
#domain(
  title: [#title Test Scores],
  file_qtbl,
  // file_fig
  )
```
