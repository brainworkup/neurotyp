# Emotional/Behavioral/Personality {#sec-emotion}

{{< include _02-10_emotion_text.qmd >}}

```{r}
#| label: data-emotion
#| include: false

library(bwu)
pheno <- "emotion"
data <- bwu::read_data(pheno = pheno)
domains <- c(
  "Psychiatric Disorders", "Personality Disorders", "Substance Use",
  "Psychosocial Problems", "Behavioral/Emotional/Social", "Emotional/Behavioral/Personality"
)
scales <- c(
  "Activity Level",
  "Affective (A)",
  "Affective (D)",
  "Affective Instability",
  "Aggression",
  "Aggressive Attitude",
  "ALC Estimated Score",
  "Alcohol Problems",
  "Antisocial Behaviors",
  "Antisocial Features",
  "Anxiety-Related Disorders",
  "Anxiety",
  "Borderline Features",
  "Cognitive (A)",
  "Cognitive (D)",
  "Conversion",
  "Depression",
  "Dominance",
  "DRG Estimated Score",
  "Drug Problems",
  "Egocentricity",
  "Grandiosity",
  "Health Concerns",
  "Hypervigilance",
  "Identity Problems",
  "Irritability",
  "Mania",
  "Negative Relationships",
  "Nonsupport",
  "Obsessive-Compulsive",
  "Paranoia",
  "Persecution",
  "Phobias",
  "Physical Aggression",
  "Physiological (A)",
  "Physiological (D)",
  "Psychotic Experiences",
  "Resentment",
  "Schizophrenia",
  "Self-Harm",
  "Social Detachment",
  "Somatic Complaints",
  "Somatization",
  "Stimulus-Seeking",
  "Stress",
  "Suicidal Ideation",
  "Thought Disorder",
  "Traumatic Stress",
  "Treatment Rejection",
  "Verbal Aggression",
  "Warmth",
  "BAI Total Score",
  "BDI-2 Total Score",
  "Activities of Daily Living",
  "Adaptability",
  "Adaptive Skills",
  "Aggression",
  "Anxiety",
  "Attention Problems",
  "Attitude to School",
  "Attitude to Teachers",
  "Atypicality",
  "Behavioral Symptoms Index",
  "Conduct Problems",
  "Depression",
  "Emotional Symptoms Index",
  "Externalizing Problems",
  "Functional Communication",
  "Hyperactivity",
  "Inattention/Hyperactivity",
  "Internalizing Problems",
  "Interpersonal Relations",
  "Leadership",
  "Locus of Control",
  "Personal Adjustment",
  "Relations with Parents",
  "School Problems",
  "Self-Esteem",
  "Self-Reliance",
  "Sensation Seeking",
  "Sense of Inadequacy",
  "Social Skills",
  "Social Stress",
  "Somatization",
  "Withdrawal"
)
data <-
  bwu::filter_data(
    data,
    domain = domains,
    scale = scales
  )
```

```{r}
#| label: text-emotion
#| cache: true
#| include: false

bwu::cat_neuropsych_results(
  data = data,
  file = "_02-10_emotion_text.qmd"
)
```

```{r}
#| label: qtbl-emotion
#| dev: tikz
#| fig-process: pdf2png
#| eval: true
#| include: false
options(tikzDefaultEngine = "xetex")

# footnotes
fn_t_score <- gt::md("*T*-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]")

pheno <- "emotion"
table_name <- "table_emotion"
vertical_padding <- 0.05
grp_emotion <- list(
  t_score = c("PAI", "BASC-3 PRS", "BASC-3 SRP", "BASC-3 TRS")
)

data2 <-
  dplyr::filter(data, domain %in% c(
    "Psychiatric Disorders",
    "Personality Disorders",
    "Substance Use",
    "Behavioral/Emotional/Social",
    "Emotional/Behavioral/Personality"
  )) |>
  dplyr::arrange(test_name) |>
  dplyr::arrange(subdomain) |>
  dplyr::arrange(absort)
```

```{r}
#| label: qtbl-emotion-2
#| dev: tikz
#| fig-process: pdf2png
#| eval: false
#| include: false
options(tikzDefaultEngine = "xetex")

# PAI
data_emotion <- data2[, c(10, 1, 3, 4, 5)]
colnames(data_emotion)[1] <- "test_name"
data3 <- data_emotion

bwu::tbl_gt(
  data = data3,
  pheno = pheno,
  table_name = table_name,
  dynamic_grp = grp_emotion,
  vertical_padding = vertical_padding,
  multiline = FALSE
)
```

```{r}
#| label: qtbl-basc3
#| dev: tikz
#| fig-process: pdf2png
#| eval: true
#| include: false
options(tikzDefaultEngine = "xetex")

# BASC-3

data_emotion <- data2[, c(7, 1, 3, 4, 8, 10)]
data3 <- data_emotion

bwu::tbl_gt(
  data = data3,
  pheno = pheno,
  table_name = table_name,
  dynamic_grp = grp_emotion,
  vertical_padding = vertical_padding,
  multiline = FALSE
)
```

```{r}
#| label: pai-tables
#| eval: false
#| include: false

tbl1 <-
  dplyr::filter(data_emotion, domain == "Psychiatric Disorders") |>
  dplyr::arrange(test_name) |>
  dplyr::arrange(subdomain)
tbl1 <- tbl1[, c(11, 2, 4, 5, 6)]
colnames(tbl1)[1] <- "test_name"
# table_psych <- bwu::tbl_gt(
#   tbl1,
#   table_name = "table_psych",
#   source_note = source_note
# )

tbl2 <-
  dplyr::filter(data_emotion, domain == "Personality Disorders") |>
  dplyr::arrange(test_name) |>
  dplyr::arrange(subdomain)
tbl2 <- tbl2[, c(11, 2, 4, 5, 6)]
colnames(tbl2)[1] <- "test_name"
# table_personality <- bwu::tbl_gt(
#   tbl2,
#   table_name = "table_personality",
#   source_note = source_note
# )

tbl3 <-
  dplyr::filter(data_emotion, domain == "Substance Use") |>
  dplyr::arrange(test_name) |>
  dplyr::arrange(subdomain)
tbl3 <- tbl3[, c(11, 2, 4, 5, 6)]
colnames(tbl3)[1] <- "test_name"
# table_sud <- bwu::tbl_gt(
#   tbl3,
#   table_name = "table_sud",
#   source_note = source_note
# )

tbl4 <-
  dplyr::filter(data_emotion, domain == "Psychosocial Problems") |>
  dplyr::arrange(test_name) |>
  dplyr::arrange(subdomain)
tbl4 <- tbl4[, c(11, 2, 4, 5, 6)]
colnames(tbl4)[1] <- "test_name"
# table_social <- bwu::tbl_gt(
#   tbl4,
#   table_name = "table_social",
#   source_note = source_note
# )
```

```{r}
#| label: fig-emotion-self
#| fig-cap: "Mood/Self-Report"
#| include: false

# args
pheno <- "emotion"
df_self <-
  dplyr::filter(data) |>
  dplyr::filter(test_name == "BASC-3 SRP")

x <- df_self$z_mean_subdomain
y <- df_self$subdomain
colors <- NULL
return_plot <- TRUE
# return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_emotion_self.svg"

# Make dotplot
bwu::dotplot(
  data = df_self,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)
```

```{r}
#| label: fig-emotion-parent
#| fig-cap: "Mood/Parent-Report"
#| include: false

# args
pheno <- "emotion"
df_parent <-
  dplyr::filter(data) |>
  dplyr::filter(test_name == "BASC-3 PRS")

x <- df_parent$z_mean_subdomain
y <- df_parent$subdomain
colors <- NULL
return_plot <- TRUE
# return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_emotion_parent.svg"

# Make dotplot
bwu::dotplot(
  data = df_parent,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)
```


## Self-Report

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Fira Sans", size: 9pt)
  set text(..font)
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [*Table*],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            Emotional/Behavioral/Personality/Social
            ]),
          placement: none,
          kind: "image",
          supplement: [*Fig.*],
          gap: 0.5em,
        ),
      )
  }
```

```{=typst}
#let title = "Mood/Self-Report"
#let file_qtbl = "table_mood_self.png"
#let file_fig = "fig_emotion_self.svg"
#domain(
  title: [#title Test Scores],
  file_qtbl,
  file_fig
  )
```

## Parent Report

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Fira Sans", size: 9pt)
  set text(..font)
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [*Table*],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            Emotional/Behavioral/Personality/Social
            ]),
          placement: none,
          kind: "image",
          supplement: [*Fig.*],
          gap: 0.5em,
        ),
      )
  }
```

```{=typst}
#let title = "Mood/Parent-Report"
#let file_qtbl = "table_mood_parent.png"
#let file_fig = "fig_emotion_parent.svg"
#domain(
  title: [#title Test Scores],
  file_qtbl,
  file_fig
  )
```
